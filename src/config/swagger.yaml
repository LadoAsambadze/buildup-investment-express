openapi: 3.0.0
info:
  title: Buildup Investment
  description: API for managing company names
  version: 0.1.9

servers:
  - url: http://localhost:3000/api
    description: Local server

paths:
  /create-company:
    post:
      tags:
        - Companies
      summary: Create a new company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCompanyRequest"
      responses:
        "201":
          description: Company created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - Company already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /companies:
    get:
      tags:
        - Companies
      summary: Get all companies
      responses:
        "200":
          description: List of companies retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyListResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /companies/{id}:
    delete:
      tags:
        - Companies
      summary: Delete a company by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the company to delete
      responses:
        "200":
          description: Company deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Companies
      summary: Update a company by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the company to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCompanyRequest"
      responses:
        "200":
          description: Company updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyResponse"
        "400":
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - Company name already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
 
 
  /buildings:
    get:
      summary: Get all buildings
      tags:
        - Buildings
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Filter buildings by company ID
      responses:
        "200":
          description: List of buildings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    company_id:
                      type: integer
                    company_name:
                      type: string
                    desktop_image:
                      type: string
                    mobile_image:
                      type: string
                    desktop_paths:
                      type: array
                      items:
                        type: string
                    mobile_paths:
                      type: array
                      items:
                        type: string
        "500":
          description: Server error
 
 
  /buildings:
    get:
      summary: Get all buildings
      tags:
        - Buildings
      parameters:
        - in: query
          name: company_id
          schema:
            type: integer
          description: Filter buildings by company ID
      responses:
        "200":
          description: List of buildings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    company_id:
                      type: integer
                    company_name:
                      type: string
                    desktop_image:
                      type: string
                    mobile_image:
                      type: string
                    desktop_paths:
                      type: object
                      additionalProperties:
                        type: string
                      example:
                        floor1: /path/to/floor1
                        floor2: /path/to/floor2
                        lobby: /path/to/lobby
                    mobile_paths:
                      type: object
                      additionalProperties:
                        type: string
                      example:
                        entrance: /path/to/entrance
                        main: /path/to/main
                        exit: /path/to/exit
        "500":
          description: Server error

  /create-building:
    post:
      summary: Create a new building
      tags:
        - Buildings
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - address
                - company_id
                - desktop_image
                - mobile_image
                - desktop_paths
                - mobile_paths
              properties:
                name:
                  type: string
                  description: Building name
                address:
                  type: string
                  description: Building address
                company_id:
                  type: integer
                  description: ID of the company that owns the building
                desktop_image:
                  type: string
                  format: binary
                  description: Desktop version of building image
                mobile_image:
                  type: string
                  format: binary
                  description: Mobile version of building image
                desktop_paths:
                  type: object
                  description: Object containing desktop navigation paths
                  additionalProperties:
                    type: string
                  example:
                    floor1: /path/to/floor1
                    floor2: /path/to/floor2
                    lobby: /path/to/lobby
                mobile_paths:
                  type: object
                  description: Object containing mobile navigation paths
                  additionalProperties:
                    type: string
                  example:
                    entrance: /path/to/entrance
                    main: /path/to/main
                    exit: /path/to/exit
      responses:
        '201':
          description: Building created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: Building created successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      address:
                        type: string
                      company_id:
                        type: integer
                      desktop_image:
                        type: string
                      mobile_image:
                        type: string
                      desktop_paths:
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          floor1: /path/to/floor1
                          floor2: /path/to/floor2
                      mobile_paths:
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          entrance: /path/to/entrance
                          lobby: /path/to/lobby
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: VALIDATION_ERROR
                  message:
                    type: string
                    example: desktop_paths and mobile_paths must be objects
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: COMPANY_NOT_FOUND
                  message:
                    type: string
                    example: Company with this ID does not exist.
        '409':
          description: Building with this name already exists for this company
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: BUILDING_EXISTS
                  message:
                    type: string
                    example: Building with this name already exists for this company
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: SERVER_ERROR
                  message:
                    type: string
                    example: An error occurred while creating the building



  /buildings/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Building ID

    get:
      summary: Get building by ID
      tags:
        - Buildings
      responses:
        "200":
          description: Building details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  company_id:
                    type: integer
                  company_name:
                    type: string
                  desktop_image:
                    type: string
                  mobile_image:
                    type: string
                  desktop_paths:
                    type: array
                    items:
                      type: string
                  mobile_paths:
                    type: array
                    items:
                      type: string
        "404":
          description: Building not found
        "500":
          description: Server error

    put:
      summary: Update building
      tags:
        - Buildings
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Building name
                address:
                  type: string
                  description: Building address
                company_id:
                  type: integer
                  description: ID of the company that owns the building
                desktop_image:
                  type: string
                  format: binary
                  description: Desktop version of building image
                mobile_image:
                  type: string
                  format: binary
                  description: Mobile version of building image
                desktop_paths:
                  type: object
                  description: Object containing desktop navigation paths
                  additionalProperties:
                    type: string
                  example:
                    floor1: /path/to/floor1
                    floor2: /path/to/floor2
                    lobby: /path/to/lobby
                mobile_paths:
                  type: object
                  description: Object containing mobile navigation paths
                  additionalProperties:
                    type: string
                  example:
                    entrance: /path/to/entrance
                    main: /path/to/main
                    exit: /path/to/exit
      responses:
        '200':
          description: Building updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  company_id:
                    type: integer
                  desktop_image:
                    type: string
                  mobile_image:
                    type: string
                  desktop_paths:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      floor1: /path/to/floor1
                      floor2: /path/to/floor2
                  mobile_paths:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      entrance: /path/to/entrance
                      lobby: /path/to/lobby
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: VALIDATION_ERROR
                  message:
                    type: string
                    example: desktop_paths and mobile_paths must be objects
        '404':
          description: Building or company not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: BUILDING_NOT_FOUND
                  message:
                    type: string
                    example: Building or company not found
        '409':
          description: Building with this name already exists for this company
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: BUILDING_EXISTS
                  message:
                    type: string
                    example: Building with this name already exists for this company
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: SERVER_ERROR
                  message:
                    type: string
                    example: An error occurred while updating the building

    delete:
      summary: Delete building
      tags:
        - Buildings
      responses:
        '200':
          description: Building deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: Building deleted successfully
        '404':
          description: Building not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: BUILDING_NOT_FOUND
                  message:
                    type: string
                    example: Building not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: SERVER_ERROR
                  message:
                    type: string
                    example: An error occurred while deleting the building




  /create-floor-plan:
    post:
      summary: Create a new floor plan
      tags:
        - Floor Plans
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - building_id
                - desktop_paths
                - mobile_paths
                - floor_range_start
                - floor_range_end
                - starting_apartment_number
                - apartments_per_floor
                - desktop_image
                - mobile_image
              properties:
                name:
                  type: string
                  maxLength: 100
                  example: "Tower A Floor Plan"
                  description: Name of the floor plan
                building_id:
                  type: integer
                  minimum: 1
                  example: 1
                  description: ID of the building the floor plan is associated with
                desktop_paths:
                  type: object
                  description: Object representing desktop path details
                  example:
                    path1: "M10,20 L30,40"
                    path2: "M50,60 L70,80"
                mobile_paths:
                  type: object
                  description: Object representing mobile path details
                  example:
                    path1: "M15,25 L35,45"
                    path2: "M55,65 L75,85"
                floor_range_start:
                  type: integer
                  minimum: 1
                  example: 1
                  description: Starting floor range number
                floor_range_end:
                  type: integer
                  minimum: 1
                  example: 5
                  description: Ending floor range number, must be greater than or equal to `floor_range_start`
                starting_apartment_number:
                  type: integer
                  minimum: 1
                  example: 101
                  description: Number of the first apartment on the floor
                apartments_per_floor:
                  type: integer
                  minimum: 1
                  example: 4
                  description: Number of apartments per floor
                desktop_image:
                  type: string
                  format: binary
                  description: Image file for the desktop version of the floor plan
                mobile_image:
                  type: string
                  format: binary
                  description: Image file for the mobile version of the floor plan
      responses:
        "201":
          description: Floor plan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Floor plan created successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      name:
                        type: string
                        example: "Tower A Floor Plan"
        "400":
          description: Bad request, validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation error"
                  errors:
                    type: array
                    items:
                      type: string
                      example: "Name cannot be empty"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /floor-plans:
    get:
      summary: Get all floor plans
      description: Retrieve a list of all floor plans.
      responses:
        "200":
          description: A list of floor plans.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Main Floor"
                    building_id:
                      type: integer
                      example: 101
                    desktop_image:
                      type: string
                      example: "/images/desktop_main.png"
                    mobile_image:
                      type: string
                      example: "/images/mobile_main.png"
                    desktop_paths:
                      type: array
                      items:
                        type: string
                      example: ["/path1", "/path2"]
                    mobile_paths:
                      type: array
                      items:
                        type: string
                      example: ["/m_path1", "/m_path2"]
                    floor_range_start:
                      type: integer
                      example: 1
                    floor_range_end:
                      type: integer
                      example: 10
                    starting_apartment_number:
                      type: integer
                      example: 101
                    apartments_per_floor:
                      type: integer
                      example: 4
                    created_at:
                      type: string
                      format: date-time
                      example: "2024-11-12T14:30:00Z"

  /floor-plans/{id}:
    get:
      summary: Get a floor plan by ID
      description: Retrieve a specific floor plan by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the floor plan
          schema:
            type: integer
      responses:
        "200":
          description: A floor plan object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Main Floor"
                  building_id:
                    type: integer
                    example: 101
                  desktop_image:
                    type: string
                    example: "/images/desktop_main.png"
                  mobile_image:
                    type: string
                    example: "/images/mobile_main.png"
                  desktop_paths:
                    type: array
                    items:
                      type: string
                    example: ["/path1", "/path2"]
                  mobile_paths:
                    type: array
                    items:
                      type: string
                    example: ["/m_path1", "/m_path2"]
                  floor_range_start:
                    type: integer
                    example: 1
                  floor_range_end:
                    type: integer
                    example: 10
                  starting_apartment_number:
                    type: integer
                    example: 101
                  apartments_per_floor:
                    type: integer
                    example: 4
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-11-12T14:30:00Z"
        "404":
          description: Floor plan not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ERROR"
                  error:
                    type: string
                    example: "FLOOR_PLAN_NOT_FOUND"
                  message:
                    type: string
                    example: "Floor plan with this ID does not exist."

    delete:
      summary: Delete a floor plan by ID
      description: Delete a specific floor plan based on its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the floor plan to delete
          schema:
            type: integer
      responses:
        "200":
          description: Floor plan deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Floor plan deleted successfully."
                  data:
                    type: object
        "404":
          description: Floor plan not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ERROR"
                  error:
                    type: string
                    example: "FLOOR_PLAN_NOT_FOUND"
                  message:
                    type: string
                    example: "Floor plan with this ID does not exist."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ERROR"
                  error:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  message:
                    type: string
                    example: "An error occurred while processing the request."

    put:
      summary: Edit a floor plan by ID
      description: Update a specific floor plan based on its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the floor plan to edit
          schema:
            type: integer
      requestBody:
        description: Data for updating the floor plan.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Floor Name"
                building_id:
                  type: integer
                  example: 101
                floor_range_start:
                  type: integer
                  example: 1
                floor_range_end:
                  type: integer
                  example: 10
                starting_apartment_number:
                  type: integer
                  example: 101
                apartments_per_floor:
                  type: integer
                  example: 4
                desktop_paths:
                  type: array
                  items:
                    type: string
                  example: ["/updated_path1", "/updated_path2"]
                mobile_paths:
                  type: array
                  items:
                    type: string
                  example: ["/updated_m_path1", "/updated_m_path2"]
      responses:
        "200":
          description: Floor plan updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Floor plan updated successfully."
                  data:
                    type: object
        "400":
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ERROR"
                  error:
                    type: string
                    example: "VALIDATION_ERROR"
                  message:
                    type: string
                    example: "Invalid data provided."
        "404":
          description: Floor plan not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ERROR"
                  error:
                    type: string
                    example: "FLOOR_PLAN_NOT_FOUND"
                  message:
                    type: string
                    example: "Floor plan with this ID does not exist."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ERROR"
                  error:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  message:
                    type: string
                    example: "An error occurred while processing the request."

  /create-apartments:
    post:
      summary: Generate apartments based on a floor plan ID
      operationId: createApartments
      tags:
        - Apartments
      requestBody:
        description: The floor plan ID used to generate apartments.
        content:
          application/json:
            required: true
            schema:
              type: object
              properties:
                floor_plan_id:
                  type: integer
                  description: The ID of the floor plan to generate apartments for.
                  example: 1
              required:
                - floor_plan_id
      responses:
        "201":
          description: Apartments generated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: Apartments generated successfully.
                  apartments:
                    type: array
                    items:
                      type: object
                      properties:
                        floor:
                          type: integer
                          example: 1
                        apartments:
                          type: array
                          items:
                            type: object
                            properties:
                              flat_id:
                                type: integer
                                example: 1
                              flat_number:
                                type: integer
                                example: 101
        "400":
          description: Invalid floor plan ID provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: VALIDATION_ERROR
                  message:
                    type: string
                    example: "Floor plan ID must be a positive integer."
        "500":
          description: An error occurred while generating apartments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  error:
                    type: string
                    example: SERVER_ERROR
                  message:
                    type: string
                    example: An error occurred while generating apartments.
                  details:
                    type: string
                    example: Some detailed error message (only in development mode)
